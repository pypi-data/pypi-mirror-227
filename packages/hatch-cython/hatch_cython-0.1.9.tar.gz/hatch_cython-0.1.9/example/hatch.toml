[build]
ignore-vcs = true
artifacts = [
    "*.so",
    "*.dll",
]

[build.targets.wheel]
packages = ["src/example_lib"]

[build.targets.wheel.hooks.custom]
path = "../src/hatch_cython/devel.py"
dependencies = [
  "Cython",
  "setuptools",
  "numpy",
  "llvmlite"
]

[build.targets.wheel.hooks.custom.options]
src = "example_lib"
include_numpy = true
parallel = true
compile_args = [
  { platforms = ["linux", "darwin"], arg = "-Wcpp" },
]
extra_link_args =  [
  { platforms = ["darwin"],  arg = "-L/usr/local/opt/llvm/lib" },
]
retain_intermediate_artifacts = true

[[envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]


[envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/funcclasses tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[envs.default]
dependencies = [
  "coverage",
  "pytest",
  "beartype",
  "numpy",
]

[envs.default.scripts]
install = "python bootstrap.py"
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "install",
  "test-cov",
  "cov-report",
]
