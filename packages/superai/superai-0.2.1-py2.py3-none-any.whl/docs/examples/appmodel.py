# generated by datamodel-codegen:
#   filename:  api.yaml
#   timestamp: 2023-08-14T19:01:43+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, constr


class Candidates(BaseModel):
    data: List[Dict[str, Any]] = Field(..., title="Data")
    field: str = Field(..., title="Field")


class ImageDocumentUrl(BaseModel):
    __root__: constr(
        regex=r"^data:\/\/[^\/]+|(.+)[\/]*([^\/]+).([pP][dD][fF]|[pP][nN][gG]|[jJ][pP][gG]|[jJ][pP][eE][gG]|[tT][iI][fF][fF])$",
        min_length=5,
    ) = Field(..., title="ImageDocumentUrl")


class ReviewModel(BaseModel):
    correct: bool = Field(..., title="Correct")
    message: Optional[str] = Field("", title="Message")
    reviewedAt: datetime = Field(..., title="Reviewed at")
    workerUUID: str = Field(..., title="Worker UUID")


class SimpleBoundingBox(BaseModel):
    height: float = Field(..., title="Height")
    left: float = Field(..., title="Left")
    top: float = Field(..., title="Top")
    width: float = Field(..., title="Width")


class AdvancedCustom1880Mdhk9FieldContentModel(BaseModel):
    boundingBox: SimpleBoundingBox
    candidates: Optional[Candidates] = Field(None, title="Candidates")
    confidence: Optional[float] = Field(None, title="Confidence")
    content: str = Field(..., title="Content")
    documentId: Optional[str] = Field("advanced-custom-1", title="Document Type")
    documentName: Optional[str] = Field("Advanced Custom", title="Document Name")
    isModelConfident: Optional[bool] = Field(None, title="Is model confident")
    maxFields: Optional[int] = Field(1, title="Max fields")
    pageNumber: int = Field(..., title="Page Number")
    review: Optional[List[ReviewModel]] = Field([], title="Reviews")


class AdvancedCustom1Zfwux30JFieldContentModel(BaseModel):
    boundingBox: SimpleBoundingBox
    candidates: Optional[Candidates] = Field(None, title="Candidates")
    confidence: Optional[float] = Field(None, title="Confidence")
    content: str = Field(..., title="Content")
    documentId: Optional[str] = Field("advanced-custom-1", title="Document Type")
    documentName: Optional[str] = Field("Advanced Custom", title="Document Name")
    isModelConfident: Optional[bool] = Field(None, title="Is model confident")
    maxFields: Optional[int] = Field(1, title="Max fields")
    pageNumber: int = Field(..., title="Page Number")
    review: Optional[List[ReviewModel]] = Field([], title="Reviews")


class AnnotationModel(BaseModel):
    advanced_custom_1880Mdhk9: Optional[List[AdvancedCustom1880Mdhk9FieldContentModel]] = Field(
        None,
        alias="advanced-custom-1880Mdhk9",
        description=" ",
        max_length=100000,
        min_items=0,
        min_length=0,
        title="Invoice Receiver",
    )
    advanced_custom_1Zfwux30J: Optional[List[AdvancedCustom1Zfwux30JFieldContentModel]] = Field(
        None,
        alias="advanced-custom-1Zfwux30J",
        description=" ",
        max_length=100000,
        min_items=0,
        min_length=0,
        title="Invoice id",
    )


class OcrTextDataModel(BaseModel):
    boundingBox: Optional[SimpleBoundingBox] = None
    confidence: Optional[float] = Field(None, title="Confidence")
    content: str = Field(..., title="Content")
    pageNumber: Optional[int] = Field(None, title="Page number")


class ProcessedDocument(BaseModel):
    annotations: AnnotationModel
    ocrText: Optional[List[OcrTextDataModel]] = Field([], title="Ocr text")
    url: ImageDocumentUrl = Field(..., title="Document URL")
