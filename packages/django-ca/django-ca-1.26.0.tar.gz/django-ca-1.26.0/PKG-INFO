Metadata-Version: 2.1
Name: django-ca
Version: 1.26.0
Summary: A Django app providing a SSL/TLS certificate authority.
Home-page: https://github.com/mathiasertl/django-ca
Author: Mathias Ertl
Author-email: mati@er.tl
Project-URL: Documentation, https://django-ca.readthedocs.io/
Project-URL: Source, https://github.com/mathiasertl/django-ca/
Project-URL: Issues, https://github.com/mathiasertl/django-ca/issues
Project-URL: Changelog, https://django-ca.readthedocs.io/en/latest/changelog.html
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.1
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Security :: Cryptography
Classifier: Topic :: Security
Classifier: Typing :: Typed
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
Provides-Extra: api
Provides-Extra: redis
Provides-Extra: celery
Provides-Extra: mysql
Provides-Extra: postgres
Provides-Extra: psycopg3
Provides-Extra: yaml
License-File: LICENSE

**django-ca** is a tool to manage TLS certificate authorities and easily issue and revoke certificates. It is
based `cryptography <https://cryptography.io/>`_ and `Django <https://www.djangoproject.com/>`_. It can be
used as an app in an existing Django project or stand-alone with the basic project included. Everything can be
managed via the command line via `manage.py` commands - so no web server is needed, if youâ€™re happy with the
command-line.

Features:

#. Set up a secure local certificate authority in just a few minutes.
#. Certificate revocation via CRLs and OCSP.
#. Certificate issuance via ACMEv2, command line, web interface or REST API.
#. Management via command line and/or via Django's admin interface.
#. Get email notifications about certificates about to expire.
#. Written in Python 3.8+, Django 3.2+ and cryptography 40.0+.

Please see https://django-ca.readthedocs.org for the most recent documentation.
