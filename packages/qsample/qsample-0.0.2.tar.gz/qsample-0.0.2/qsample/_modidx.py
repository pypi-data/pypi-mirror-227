# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/qsample/',
                'doc_host': 'https://dpwinter.github.io',
                'git_url': 'https://github.com/dpwinter/qsample/tree/master/',
                'lib_path': 'qsample'},
  'syms': { 'qsample.callbacks': { 'qsample.callbacks.Callback': ('callbacks.html#callback', 'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_circuit_begin': ( 'callbacks.html#callback.on_circuit_begin',
                                                                                    'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_circuit_end': ( 'callbacks.html#callback.on_circuit_end',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_protocol_begin': ( 'callbacks.html#callback.on_protocol_begin',
                                                                                     'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_protocol_end': ( 'callbacks.html#callback.on_protocol_end',
                                                                                   'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_sampler_begin': ( 'callbacks.html#callback.on_sampler_begin',
                                                                                    'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.on_sampler_end': ( 'callbacks.html#callback.on_sampler_end',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.Callback.store': ('callbacks.html#callback.store', 'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList': ('callbacks.html#callbacklist', 'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.__init__': ( 'callbacks.html#callbacklist.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.__iter__': ( 'callbacks.html#callbacklist.__iter__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList._add_default_callbacks': ( 'callbacks.html#callbacklist._add_default_callbacks',
                                                                                              'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_circuit_begin': ( 'callbacks.html#callbacklist.on_circuit_begin',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_circuit_end': ( 'callbacks.html#callbacklist.on_circuit_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_protocol_begin': ( 'callbacks.html#callbacklist.on_protocol_begin',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_protocol_end': ( 'callbacks.html#callbacklist.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_sampler_begin': ( 'callbacks.html#callbacklist.on_sampler_begin',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.CallbackList.on_sampler_end': ( 'callbacks.html#callbacklist.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.CollectStatsPerShot': ('callbacks.html#collectstatspershot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.CollectStatsPerShot.__init__': ( 'callbacks.html#collectstatspershot.__init__',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.CollectStatsPerShot.on_protocol_end': ( 'callbacks.html#collectstatspershot.on_protocol_end',
                                                                                              'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts': ('callbacks.html#pathproducts', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.__init__': ( 'callbacks.html#pathproducts.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.on_sampler_end': ( 'callbacks.html#pathproducts.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.PathProducts.plot': ('callbacks.html#pathproducts.plot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot': ('callbacks.html#plotervpershot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot.__init__': ( 'callbacks.html#plotervpershot.__init__',
                                                                                  'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot.on_circuit_end': ( 'callbacks.html#plotervpershot.on_circuit_end',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot.on_protocol_begin': ( 'callbacks.html#plotervpershot.on_protocol_begin',
                                                                                           'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot.on_protocol_end': ( 'callbacks.html#plotervpershot.on_protocol_end',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotERVPerShot.on_sampler_end': ( 'callbacks.html#plotervpershot.on_sampler_end',
                                                                                        'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotStats': ('callbacks.html#plotstats', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PlotStats.on_sampler_end': ( 'callbacks.html#plotstats.on_sampler_end',
                                                                                   'qsample/callbacks.py'),
                                   'qsample.callbacks.PrintERVPerShot': ('callbacks.html#printervpershot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.PrintERVPerShot.on_circuit_end': ( 'callbacks.html#printervpershot.on_circuit_end',
                                                                                         'qsample/callbacks.py'),
                                   'qsample.callbacks.PrintERVPerShot.on_protocol_begin': ( 'callbacks.html#printervpershot.on_protocol_begin',
                                                                                            'qsample/callbacks.py'),
                                   'qsample.callbacks.PrintERVPerShot.on_protocol_end': ( 'callbacks.html#printervpershot.on_protocol_end',
                                                                                          'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget': ('callbacks.html#relstdtarget', 'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget.__init__': ( 'callbacks.html#relstdtarget.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.RelStdTarget.on_protocol_end': ( 'callbacks.html#relstdtarget.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerShot': ('callbacks.html#statspershot', 'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerShot.__init__': ( 'callbacks.html#statspershot.__init__',
                                                                                'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerShot.on_protocol_end': ( 'callbacks.html#statspershot.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.StatsPerShot.on_sampler_end': ( 'callbacks.html#statspershot.on_sampler_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.StopAtNoHits': ('callbacks.html#stopatnohits', 'qsample/callbacks.py'),
                                   'qsample.callbacks.StopAtNoHits.on_protocol_end': ( 'callbacks.html#stopatnohits.on_protocol_end',
                                                                                       'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates': ('callbacks.html#subsetrates', 'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.__init__': ( 'callbacks.html#subsetrates.__init__',
                                                                               'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.on_protocol_end': ( 'callbacks.html#subsetrates.on_protocol_end',
                                                                                      'qsample/callbacks.py'),
                                   'qsample.callbacks.SubsetRates.on_sampler_end': ( 'callbacks.html#subsetrates.on_sampler_end',
                                                                                     'qsample/callbacks.py'),
                                   'qsample.callbacks.VerboseCircuitExec': ('callbacks.html#verbosecircuitexec', 'qsample/callbacks.py'),
                                   'qsample.callbacks.VerboseCircuitExec.on_circuit_end': ( 'callbacks.html#verbosecircuitexec.on_circuit_end',
                                                                                            'qsample/callbacks.py')},
            'qsample.circuit': { 'qsample.circuit.Circuit': ('circuit.html#circuit', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__delitem__': ('circuit.html#circuit.__delitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__getitem__': ('circuit.html#circuit.__getitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__init__': ('circuit.html#circuit.__init__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__len__': ('circuit.html#circuit.__len__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__setitem__': ('circuit.html#circuit.__setitem__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.__str__': ('circuit.html#circuit.__str__', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.draw': ('circuit.html#circuit.draw', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.id': ('circuit.html#circuit.id', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.insert': ('circuit.html#circuit.insert', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.n_qubits': ('circuit.html#circuit.n_qubits', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.n_ticks': ('circuit.html#circuit.n_ticks', 'qsample/circuit.py'),
                                 'qsample.circuit.Circuit.qubits': ('circuit.html#circuit.qubits', 'qsample/circuit.py'),
                                 'qsample.circuit.draw_circuit': ('circuit.html#draw_circuit', 'qsample/circuit.py'),
                                 'qsample.circuit.unpack': ('circuit.html#unpack', 'qsample/circuit.py')},
            'qsample.examples': {},
            'qsample.math': { 'qsample.math.Wald_var': ('math.html#wald_var', 'qsample/math.py'),
                              'qsample.math.Wilson_var': ('math.html#wilson_var', 'qsample/math.py'),
                              'qsample.math.binom': ('math.html#binom', 'qsample/math.py'),
                              'qsample.math.cartesian_product': ('math.html#cartesian_product', 'qsample/math.py'),
                              'qsample.math.comb': ('math.html#comb', 'qsample/math.py'),
                              'qsample.math.joint_binom': ('math.html#joint_binom', 'qsample/math.py'),
                              'qsample.math.subset_cards': ('math.html#subset_cards', 'qsample/math.py'),
                              'qsample.math.subset_probs': ('math.html#subset_probs', 'qsample/math.py')},
            'qsample.noise': { 'qsample.noise.E0': ('noise.html#e0', 'qsample/noise.py'),
                               'qsample.noise.E0.group': ('noise.html#e0.group', 'qsample/noise.py'),
                               'qsample.noise.E0.run': ('noise.html#e0.run', 'qsample/noise.py'),
                               'qsample.noise.E1': ('noise.html#e1', 'qsample/noise.py'),
                               'qsample.noise.E1.generate': ('noise.html#e1.generate', 'qsample/noise.py'),
                               'qsample.noise.E1.group': ('noise.html#e1.group', 'qsample/noise.py'),
                               'qsample.noise.E1_1': ('noise.html#e1_1', 'qsample/noise.py'),
                               'qsample.noise.E1_1.generate': ('noise.html#e1_1.generate', 'qsample/noise.py'),
                               'qsample.noise.E1_1.group': ('noise.html#e1_1.group', 'qsample/noise.py'),
                               'qsample.noise.E2': ('noise.html#e2', 'qsample/noise.py'),
                               'qsample.noise.E2.generate': ('noise.html#e2.generate', 'qsample/noise.py'),
                               'qsample.noise.E2.group': ('noise.html#e2.group', 'qsample/noise.py'),
                               'qsample.noise.E3': ('noise.html#e3', 'qsample/noise.py'),
                               'qsample.noise.E3.generate': ('noise.html#e3.generate', 'qsample/noise.py'),
                               'qsample.noise.E3.group': ('noise.html#e3.group', 'qsample/noise.py'),
                               'qsample.noise.E3_1': ('noise.html#e3_1', 'qsample/noise.py'),
                               'qsample.noise.E3_1.generate': ('noise.html#e3_1.generate', 'qsample/noise.py'),
                               'qsample.noise.E3_1.group': ('noise.html#e3_1.group', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel': ('noise.html#errormodel', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.choose_p': ('noise.html#errormodel.choose_p', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.choose_w': ('noise.html#errormodel.choose_w', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.generate': ('noise.html#errormodel.generate', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.group': ('noise.html#errormodel.group', 'qsample/noise.py'),
                               'qsample.noise.ErrorModel.run': ('noise.html#errormodel.run', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap': ('noise.html#innsbrucktrap', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap.generate': ('noise.html#innsbrucktrap.generate', 'qsample/noise.py'),
                               'qsample.noise.InnsbruckTrap.group': ('noise.html#innsbrucktrap.group', 'qsample/noise.py'),
                               'qsample.noise.S1': ('noise.html#s1', 'qsample/noise.py'),
                               'qsample.noise.S1.generate': ('noise.html#s1.generate', 'qsample/noise.py'),
                               'qsample.noise.S1.group': ('noise.html#s1.group', 'qsample/noise.py'),
                               'qsample.noise.S2': ('noise.html#s2', 'qsample/noise.py'),
                               'qsample.noise.S2.generate': ('noise.html#s2.generate', 'qsample/noise.py'),
                               'qsample.noise.S2.group': ('noise.html#s2.group', 'qsample/noise.py'),
                               'qsample.noise.S4': ('noise.html#s4', 'qsample/noise.py'),
                               'qsample.noise.S4.generate': ('noise.html#s4.generate', 'qsample/noise.py'),
                               'qsample.noise.S4.group': ('noise.html#s4.group', 'qsample/noise.py')},
            'qsample.protocol': { 'qsample.protocol.Protocol': ('protocol.html#protocol', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.__init__': ('protocol.html#protocol.__init__', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.add_node': ('protocol.html#protocol.add_node', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.add_nodes_from': ( 'protocol.html#protocol.add_nodes_from',
                                                                                'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.draw': ('protocol.html#protocol.draw', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.get_circuit': ('protocol.html#protocol.get_circuit', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.qubits': ('protocol.html#protocol.qubits', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.root': ('protocol.html#protocol.root', 'qsample/protocol.py'),
                                  'qsample.protocol.Protocol.successor': ('protocol.html#protocol.successor', 'qsample/protocol.py'),
                                  'qsample.protocol.draw_protocol': ('protocol.html#draw_protocol', 'qsample/protocol.py')},
            'qsample.sampler.direct': { 'qsample.sampler.direct.DirectSampler': ( 'sampler.direct.html#directsampler',
                                                                                  'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.__err_params_to_matrix': ( 'sampler.direct.html#directsampler.__err_params_to_matrix',
                                                                                                         'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.__init__': ( 'sampler.direct.html#directsampler.__init__',
                                                                                           'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.run': ( 'sampler.direct.html#directsampler.run',
                                                                                      'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.save': ( 'sampler.direct.html#directsampler.save',
                                                                                       'qsample/sampler/direct.py'),
                                        'qsample.sampler.direct.DirectSampler.stats': ( 'sampler.direct.html#directsampler.stats',
                                                                                        'qsample/sampler/direct.py')},
            'qsample.sampler.experimental': { 'qsample.sampler.experimental.SubsetSamplerERV': ( 'sampler.experimental.html#subsetsamplererv',
                                                                                                 'qsample/sampler/experimental.py'),
                                              'qsample.sampler.experimental.SubsetSamplerERV.__init__': ( 'sampler.experimental.html#subsetsamplererv.__init__',
                                                                                                          'qsample/sampler/experimental.py'),
                                              'qsample.sampler.experimental.SubsetSamplerERV._choose_subset': ( 'sampler.experimental.html#subsetsamplererv._choose_subset',
                                                                                                                'qsample/sampler/experimental.py'),
                                              'qsample.sampler.experimental.SubsetSamplerERV.wplus1': ( 'sampler.experimental.html#subsetsamplererv.wplus1',
                                                                                                        'qsample/sampler/experimental.py')},
            'qsample.sampler.subset': { 'qsample.sampler.subset.SubsetSampler': ( 'sampler.subset.html#subsetsampler',
                                                                                  'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.__init__': ( 'sampler.subset.html#subsetsampler.__init__',
                                                                                           'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler._choose_subset': ( 'sampler.subset.html#subsetsampler._choose_subset',
                                                                                                 'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.err_params_to_matrix': ( 'sampler.subset.html#subsetsampler.err_params_to_matrix',
                                                                                                       'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.run': ( 'sampler.subset.html#subsetsampler.run',
                                                                                      'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.save': ( 'sampler.subset.html#subsetsampler.save',
                                                                                       'qsample/sampler/subset.py'),
                                        'qsample.sampler.subset.SubsetSampler.stats': ( 'sampler.subset.html#subsetsampler.stats',
                                                                                        'qsample/sampler/subset.py')},
            'qsample.sampler.tree': { 'qsample.sampler.tree.Constant': ('sampler.tree.html#constant', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Constant.__init__': ( 'sampler.tree.html#constant.__init__',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Constant.__str__': ( 'sampler.tree.html#constant.__str__',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Delta': ('sampler.tree.html#delta', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Delta.__str__': ('sampler.tree.html#delta.__str__', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree': ('sampler.tree.html#tree', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.__init__': ('sampler.tree.html#tree.__init__', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.__str__': ('sampler.tree.html#tree.__str__', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.add': ('sampler.tree.html#tree.add', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.delta': ('sampler.tree.html#tree.delta', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.draw': ('sampler.tree.html#tree.draw', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.path_prod': ( 'sampler.tree.html#tree.path_prod',
                                                                               'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.path_var': ('sampler.tree.html#tree.path_var', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.path_weight': ( 'sampler.tree.html#tree.path_weight',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.remove': ('sampler.tree.html#tree.remove', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.root_leaf_rate': ( 'sampler.tree.html#tree.root_leaf_rate',
                                                                                    'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.root_leaf_var': ( 'sampler.tree.html#tree.root_leaf_var',
                                                                                   'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.subtree_sum': ( 'sampler.tree.html#tree.subtree_sum',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.value': ('sampler.tree.html#tree.value', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Tree.var': ('sampler.tree.html#tree.var', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable': ('sampler.tree.html#variable', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.__init__': ( 'sampler.tree.html#variable.__init__',
                                                                                  'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.__str__': ( 'sampler.tree.html#variable.__str__',
                                                                                 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.rate': ('sampler.tree.html#variable.rate', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.Variable.var': ('sampler.tree.html#variable.var', 'qsample/sampler/tree.py'),
                                      'qsample.sampler.tree.draw_tree': ('sampler.tree.html#draw_tree', 'qsample/sampler/tree.py')},
            'qsample.sim.mixin': { 'qsample.sim.mixin.CircuitRunnerMixin': ('sim.mixin.html#circuitrunnermixin', 'qsample/sim/mixin.py'),
                                   'qsample.sim.mixin.CircuitRunnerMixin._apply_gate': ( 'sim.mixin.html#circuitrunnermixin._apply_gate',
                                                                                         'qsample/sim/mixin.py'),
                                   'qsample.sim.mixin.CircuitRunnerMixin.run': ( 'sim.mixin.html#circuitrunnermixin.run',
                                                                                 'qsample/sim/mixin.py')},
            'qsample.sim.stabilizer': { 'qsample.sim.stabilizer.ChpSimulator': ( 'sim.stabilizer.html#chpsimulator',
                                                                                 'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.__init__': ( 'sim.stabilizer.html#chpsimulator.__init__',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.__str__': ( 'sim.stabilizer.html#chpsimulator.__str__',
                                                                                         'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator._measure_determined': ( 'sim.stabilizer.html#chpsimulator._measure_determined',
                                                                                                     'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator._measure_random': ( 'sim.stabilizer.html#chpsimulator._measure_random',
                                                                                                 'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator._repr_pretty_': ( 'sim.stabilizer.html#chpsimulator._repr_pretty_',
                                                                                               'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator._row_mult': ( 'sim.stabilizer.html#chpsimulator._row_mult',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator._row_product_sign': ( 'sim.stabilizer.html#chpsimulator._row_product_sign',
                                                                                                   'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.cnot': ( 'sim.stabilizer.html#chpsimulator.cnot',
                                                                                      'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.hadamard': ( 'sim.stabilizer.html#chpsimulator.hadamard',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.measure': ( 'sim.stabilizer.html#chpsimulator.measure',
                                                                                         'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.ChpSimulator.phase': ( 'sim.stabilizer.html#chpsimulator.phase',
                                                                                       'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult': ( 'sim.stabilizer.html#measureresult',
                                                                                  'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult.__bool__': ( 'sim.stabilizer.html#measureresult.__bool__',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult.__eq__': ( 'sim.stabilizer.html#measureresult.__eq__',
                                                                                         'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult.__init__': ( 'sim.stabilizer.html#measureresult.__init__',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult.__repr__': ( 'sim.stabilizer.html#measureresult.__repr__',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.MeasureResult.__str__': ( 'sim.stabilizer.html#measureresult.__str__',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator': ( 'sim.stabilizer.html#stabilizersimulator',
                                                                                        'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.CNOT': ( 'sim.stabilizer.html#stabilizersimulator.cnot',
                                                                                             'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.H': ( 'sim.stabilizer.html#stabilizersimulator.h',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.I': ( 'sim.stabilizer.html#stabilizersimulator.i',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.MSd': ( 'sim.stabilizer.html#stabilizersimulator.msd',
                                                                                            'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Q': ( 'sim.stabilizer.html#stabilizersimulator.q',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Qd': ( 'sim.stabilizer.html#stabilizersimulator.qd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.R': ( 'sim.stabilizer.html#stabilizersimulator.r',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Rd': ( 'sim.stabilizer.html#stabilizersimulator.rd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.S': ( 'sim.stabilizer.html#stabilizersimulator.s',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Sd': ( 'sim.stabilizer.html#stabilizersimulator.sd',
                                                                                           'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.X': ( 'sim.stabilizer.html#stabilizersimulator.x',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Y': ( 'sim.stabilizer.html#stabilizersimulator.y',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.Z': ( 'sim.stabilizer.html#stabilizersimulator.z',
                                                                                          'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.init': ( 'sim.stabilizer.html#stabilizersimulator.init',
                                                                                             'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.StabilizerSimulator.measure': ( 'sim.stabilizer.html#stabilizersimulator.measure',
                                                                                                'qsample/sim/stabilizer.py'),
                                        'qsample.sim.stabilizer.pauli_product_phase': ( 'sim.stabilizer.html#pauli_product_phase',
                                                                                        'qsample/sim/stabilizer.py')},
            'qsample.sim.statevector': { 'qsample.sim.statevector.MeasureResult': ( 'sim.statevector.html#measureresult',
                                                                                    'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.MeasureResult.__bool__': ( 'sim.statevector.html#measureresult.__bool__',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.MeasureResult.__init__': ( 'sim.statevector.html#measureresult.__init__',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator': ( 'sim.statevector.html#statevectorsimulator',
                                                                                           'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.CNOT': ( 'sim.statevector.html#statevectorsimulator.cnot',
                                                                                                'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.H': ( 'sim.statevector.html#statevectorsimulator.h',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.I': ( 'sim.statevector.html#statevectorsimulator.i',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.MSd': ( 'sim.statevector.html#statevectorsimulator.msd',
                                                                                               'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Q': ( 'sim.statevector.html#statevectorsimulator.q',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Qd': ( 'sim.statevector.html#statevectorsimulator.qd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.R': ( 'sim.statevector.html#statevectorsimulator.r',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rd': ( 'sim.statevector.html#statevectorsimulator.rd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rx': ( 'sim.statevector.html#statevectorsimulator.rx',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Ry': ( 'sim.statevector.html#statevectorsimulator.ry',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Rz': ( 'sim.statevector.html#statevectorsimulator.rz',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.S': ( 'sim.statevector.html#statevectorsimulator.s',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Sd': ( 'sim.statevector.html#statevectorsimulator.sd',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.T': ( 'sim.statevector.html#statevectorsimulator.t',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Td': ( 'sim.statevector.html#statevectorsimulator.td',
                                                                                              'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.X': ( 'sim.statevector.html#statevectorsimulator.x',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Y': ( 'sim.statevector.html#statevectorsimulator.y',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.Z': ( 'sim.statevector.html#statevectorsimulator.z',
                                                                                             'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.__del__': ( 'sim.statevector.html#statevectorsimulator.__del__',
                                                                                                   'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.__init__': ( 'sim.statevector.html#statevectorsimulator.__init__',
                                                                                                    'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.expectation': ( 'sim.statevector.html#statevectorsimulator.expectation',
                                                                                                       'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.init': ( 'sim.statevector.html#statevectorsimulator.init',
                                                                                                'qsample/sim/statevector.py'),
                                         'qsample.sim.statevector.StatevectorSimulator.measure': ( 'sim.statevector.html#statevectorsimulator.measure',
                                                                                                   'qsample/sim/statevector.py')},
            'qsample.utils': { 'qsample.utils.load': ('utils.html#load', 'qsample/utils.py'),
                               'qsample.utils.save': ('utils.html#save', 'qsample/utils.py')}}}
