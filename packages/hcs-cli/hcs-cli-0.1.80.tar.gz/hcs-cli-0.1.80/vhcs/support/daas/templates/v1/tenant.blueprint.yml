# 'defaults' is a group of variables that are calculated and referenced by multiple resources.
# The defaults helps to deduplicate calculated variables, and 
defaults:
  name: tltenant-${deploymentId}
  tags:
    deployment: ${deploymentId}
    managed-by: titan-lite

# The providers section specifies provider-specific data. Normally this required to initialize
# a provider.
providers:
  azure:
    data: ${tenantPrep.provider}

runtimes:
  tenantPrep:
    impl: vhcs.support.daas.tenant_prep # Custom calculation of values
    data: ${vars} # Take the entire unchanged vars as input

  tenantSummary:
    impl: vhcs.support.daas.tenant_summary # Custom calculation of values
    data:
      orgId: ${vars.orgId}
      edgeId: ${vars.edgeId}
      users: ${myAADUser}
      entitlementId: ${myPoolGroup.name}
      domainName: ${tenantPrep.orgIdpMap.idpTenantDomain}
      stackUrl: ${profile.hcs.url}
    after:
    - myEntitlement

resources:
  myRg:
    kind: azure/resource-group
    data:
      name: ${defaults.name}
      parameters:
        name: ${defaults.name}
        location: ${tenantPrep.location}
        tags: ${defaults.tags}

  # myNsg:
  #   kind: azure/nsg
  #   data:
  #     name: ${defaults.name}
  #     resourceGroup: ${tenantPrep.vNet.resourceGroup}
  #     parameters:
  #       location: ${tenantPrep.location}
  #       tags: ${defaults.tags}

  mySubnet:
    kind: azure/subnet
    data:
      name: ${defaults.name}
      resourceGroup: ${tenantPrep.vNet.resourceGroup}
      vNetName: ${tenantPrep.vNet.name}
      parameters:
        address_prefix: ${tenantPrep.cidr}
        # network_security_group:
        #   id: ${myNsg.id}

  myAADGroup:
    kind: azure/aad-group
    data:
      displayName: ${defaults.name}
      mailNickname: ${defaults.name}
      description:
      parentGroup: ${vars.desktop.userGroup}
  
  myAADUser:
    kind: azure/aad-user
    for: email in vars.userEmails
    data:
      group: ${myAADGroup.id}
      domainName: ${tenantPrep.orgIdpMap.domains[0]}

  myTemplate:
    kind: hcs/pool-template
    data:
      providerInstanceId: ${tenantPrep.provider.id}
      uagDeploymentId: ${tenantPrep.template.uag_deployment_id}
      edgeDeploymentId: ${tenantPrep.template.edge_deployment_id}
      orgId: ${vars.orgId}
      name: ${defaults.name}
      vmNamePattern: tl-${deploymentId}-
      templateType: ${vars.desktop.templateType}
      applicationProperties:
        azureActiveDirectoryJoined: 'true'
      networks:
      - kind: subnets
        id: ${mySubnet.id}
        data:
          parent: ${mySubnet.id}
          name: ${mySubnet.name}
          availableIpAddresses: 250
          cidr: ${tenantPrep.cidr}
      imageReference:
        streamId: ${vars.desktop.streamId}
        markerId: ${vars.desktop.markerId}
      licenseProvided: true
      desktopAdminUsername: hcs-admin
      desktopAdminPassword: ${tenantPrep.template.password}
      diskEncryption:
        enabled: false
      sparePolicy:
        limit: ${tenantPrep.template.total_vms}
        max: ${tenantPrep.template.total_vms}
        min: ${tenantPrep.template.total_vms}
      sessionsPerVm: ${tenantPrep.template.sessions_per_vm}
      vmLicenseType: WINDOWS_CLIENT
      diskSizeInGB: 127
      infrastructure:
        vmSkus:
        - ${tenantPrep.template.vm_sku}

  myPoolGroup:
    kind: hcs/pool-group
    data:
      orgId: ${vars.orgId}
      name: ${defaults.name}
      type: DESKTOP
      templateType: ${vars.desktop.templateType}
      connectionAffinity: NEAREST_SITE
      scope: ALL_SITES
      enableSSO: false
      preferredClientType: HORIZON_CLIENT
      protocols:
      - name: BLAST
        defaultProtocol: true
      templates:
      - id: ${myTemplate.id}

  myEntitlement:
    kind: hcs/entitlement
    data:
      orgId: ${vars.orgId}
      poolIds:
      - ${myPoolGroup.id}
      resourceDetails:
      - poolId: ${myPoolGroup.id}
      userIds: "${[for u in myAADUser: u.id]}"

