from _typeshed import Incomplete

logger: Incomplete
epoch: Incomplete

class azureobject:
    credential: Incomplete
    key_vault_name: Incomplete
    key_vault_base_url: Incomplete
    secret_client: Incomplete
    key_vault_reference_regex: str
    service_client: Incomplete
    container: Incomplete
    container_client: Incomplete
    def __init__(self, azure_config) -> None: ...
    def get_key(self, key_name): ...
    def search_key(self, key_name): ...
    def list_keys(self, prefix): ...
    def get_secret(self, key_vault_reference): ...
    def replace_secrets(self, match): ...
    def load_with_secrets(self, config): ...

class azurekey:
    azure_object: Incomplete
    blob_client: Incomplete
    name: Incomplete
    does_exist: bool
    def __init__(self, azure_object, key_name, load: bool = ...) -> None: ...
    size: Incomplete
    last_modified: Incomplete
    content_type: Incomplete
    def get_properties(self) -> None: ...
    def get_contents_as_string(self): ...
    def exists(self): ...
    def delete(self) -> None: ...
    def get_contents_to_filename(self, filename) -> None: ...
    def set_contents_from_filename(self, filename) -> None: ...
    def set_contents_from_string(self, text) -> None: ...
    def get_epoch_modtime(self): ...
    def generate_url(self, seconds, display_filename: Incomplete | None = ..., content_type: Incomplete | None = ..., inline: bool = ...): ...

class azuresecret:
    azure_object: Incomplete
    secret_client: Incomplete
    key_vault_reference: Incomplete
    key_vault_reference_regex: Incomplete
    secret: Incomplete
    secret_value: Incomplete
    reference_secret_name: Incomplete
    reference_secret_version: Incomplete
    def __init__(self, azure_object, key_vault_reference) -> None: ...
    reference_vault_name: Incomplete
    def set_secret_reference_components(self) -> None: ...
    def get_secret_from_vault(self) -> None: ...
    def get_secret_as_string(self): ...
