from _typeshed import Incomplete
from docassemble.base.functions import action_argument as action_argument, action_arguments as action_arguments, action_menu_item as action_menu_item, add_separators as add_separators, all_variables as all_variables, alpha as alpha, background_action as background_action, background_error_action as background_error_action, background_response as background_response, background_response_action as background_response_action, bold as bold, capitalize as capitalize, chat_partners_available as chat_partners_available, comma_and_list as comma_and_list, comma_list as comma_list, command as command, countries_list as countries_list, country_name as country_name, create_session as create_session, create_user as create_user, currency as currency, currency_symbol as currency_symbol, decode_name as decode_name, define as define, defined as defined, delete_record as delete_record, device as device, dispatch as dispatch, encode_name as encode_name, fix_punctuation as fix_punctuation, force_ask as force_ask, force_gather as force_gather, forget_result_of as forget_result_of, from_b64_json as from_b64_json, get_chat_log as get_chat_log, get_config as get_config, get_country as get_country, get_default_timezone as get_default_timezone, get_dialect as get_dialect, get_emails as get_emails, get_info as get_info, get_language as get_language, get_locale as get_locale, get_progress as get_progress, get_question_data as get_question_data, get_session_variables as get_session_variables, get_user_info as get_user_info, get_user_list as get_user_list, get_user_secret as get_user_secret, get_voice as get_voice, go_back_in_session as go_back_in_session, indefinite_article as indefinite_article, indent as indent, interface as interface, interview_email as interview_email, interview_list as interview_list, interview_menu as interview_menu, interview_url as interview_url, interview_url_action as interview_url_action, interview_url_action_as_qr as interview_url_action_as_qr, interview_url_as_qr as interview_url_as_qr, invalidate as invalidate, italic as italic, item_label as item_label, json_response as json_response, language_from_browser as language_from_browser, language_name as language_name, location_known as location_known, location_returned as location_returned, log as log, manage_privileges as manage_privileges, message as message, name_suffix as name_suffix, need as need, nice_number as nice_number, noun_plural as noun_plural, noun_singular as noun_singular, noyes as noyes, ordinal as ordinal, ordinal_number as ordinal_number, period_list as period_list, phone_number_formatted as phone_number_formatted, phone_number_in_e164 as phone_number_in_e164, phone_number_is_valid as phone_number_is_valid, phone_number_part as phone_number_part, plain as plain, prevent_going_back as prevent_going_back, process_action as process_action, qr_code as qr_code, quantity_noun as quantity_noun, quote_paragraphs as quote_paragraphs, raw as raw, re_run_logic as re_run_logic, read_records as read_records, reconsider as reconsider, redact as redact, referring_url as referring_url, response as response, roman as roman, run_action_in_session as run_action_in_session, server_capabilities as server_capabilities, session_tags as session_tags, set_country as set_country, set_info as set_info, set_language as set_language, set_live_help_status as set_live_help_status, set_locale as set_locale, set_parts as set_parts, set_progress as set_progress, set_save_status as set_save_status, set_session_variables as set_session_variables, set_title as set_title, set_user_info as set_user_info, set_variables as set_variables, showif as showif, showifdef as showifdef, single_paragraph as single_paragraph, single_to_double_newlines as single_to_double_newlines, space_to_underscore as space_to_underscore, split as split, state_name as state_name, states_list as states_list, static_image as static_image, store_variables_snapshot as store_variables_snapshot, subdivision_type as subdivision_type, title_case as title_case, undefine as undefine, update_terms as update_terms, url_action as url_action, url_of as url_of, user_has_privilege as user_has_privilege, user_info as user_info, user_lat_lon as user_lat_lon, user_logged_in as user_logged_in, user_privileges as user_privileges, value as value, variables_as_json as variables_as_json, verb_past as verb_past, verb_present as verb_present, verbatim as verbatim, word as word, write_record as write_record, yesno as yesno, update_locale as update_locale
from docassemble.base.util import Address as Address, Asset as Asset, ChildList as ChildList, City as City, DA as DA, DABreadCrumbs as DABreadCrumbs, DACloudStorage as DACloudStorage, DAContext as DAContext, DADict as DADict, DAEmail as DAEmail, DAEmailRecipient as DAEmailRecipient, DAEmailRecipientList as DAEmailRecipientList, DAEmpty as DAEmpty, DAFile as DAFile, DAFileCollection as DAFileCollection, DAFileList as DAFileList, DAGlobal as DAGlobal, DAGoogleAPI as DAGoogleAPI, DALink as DALink, DAList as DAList, DAOAuth as DAOAuth, DAObject as DAObject, DAOrderedDict as DAOrderedDict, DARedis as DARedis, DASet as DASet, DAStaticFile as DAStaticFile, DAStore as DAStore, DATemplate as DATemplate, DAValidationError as DAValidationError, DAWeb as DAWeb, DAWebError as DAWebError, Event as Event, Expense as Expense, FinancialList as FinancialList, Income as Income, Individual as Individual, IndividualName as IndividualName, LatitudeLongitude as LatitudeLongitude, MachineLearningEntry as MachineLearningEntry, Name as Name, Organization as Organization, PeriodicFinancialList as PeriodicFinancialList, PeriodicValue as PeriodicValue, Person as Person, RandomForestMachineLearner as RandomForestMachineLearner, RelationshipTree as RelationshipTree, RoleChangeTracker as RoleChangeTracker, SVMMachineLearner as SVMMachineLearner, SimpleTextMachineLearner as SimpleTextMachineLearner, Thing as Thing, Value as Value, action_button_html as action_button_html, as_datetime as as_datetime, assemble_docx as assemble_docx, clear_explanations as clear_explanations, current_datetime as current_datetime, date_difference as date_difference, date_interval as date_interval, day_of as day_of, docx_concatenate as docx_concatenate, dow_of as dow_of, explain as explain, format_date as format_date, format_datetime as format_datetime, format_time as format_time, get_sms_session as get_sms_session, get_status as get_status, include_docx_template as include_docx_template, initiate_sms_session as initiate_sms_session, iso_country as iso_country, json as json, last_access_days as last_access_days, last_access_delta as last_access_delta, last_access_hours as last_access_hours, last_access_minutes as last_access_minutes, last_access_time as last_access_time, logic_explanation as logic_explanation, map_of as map_of, mark_task_as_performed as mark_task_as_performed, month_of as month_of, objects_from_file as objects_from_file, ocr_file as ocr_file, ocr_file_in_background as ocr_file_in_background, overlay_pdf as overlay_pdf, path_and_mimetype as path_and_mimetype, pdf_concatenate as pdf_concatenate, re as re, read_qr as read_qr, retrieve_stashed_data as retrieve_stashed_data, returning_user as returning_user, run_python_module as run_python_module, selections as selections, send_email as send_email, send_fax as send_fax, send_sms as send_sms, set_status as set_status, set_task_counter as set_task_counter, start_time as start_time, stash_data as stash_data, task_not_yet_performed as task_not_yet_performed, task_performed as task_performed, terminate_sms_session as terminate_sms_session, times_task_performed as times_task_performed, timezone_list as timezone_list, today as today, transform_json_variables as transform_json_variables, url_ask as url_ask, validation_error as validation_error, year_of as year_of, zip_file as zip_file
from itertools import chain as chain

class SpecialReturnObject: ...

class Court(DAObject):
    jurisdiction: Incomplete
    def init(self, *pargs, **kwargs) -> None: ...
    def __str__(self): ...
    def in_the_court(self, **kwargs): ...

class PartyList(DAList):
    PartyClass: Incomplete
    object_type: Incomplete
    def init(self, *pargs, **kwargs) -> None: ...

class Case(DAObject):
    PartyListClass: Incomplete
    CourtClass: Incomplete
    firstParty: Incomplete
    secondParty: Incomplete
    is_solo_action: bool
    state: Incomplete
    action_type: str
    def init(self, *pargs, **kwargs) -> None: ...
    def __str__(self): ...
    def set_action_type(self, the_value) -> None: ...
    def case_id_in_caption(self, **kwargs): ...
    def determine_court(self, **kwargs) -> None: ...
    def role_of(self, party): ...
    def all_known_people(self): ...
    def parties(self): ...

class Document(DAObject):
    def __str__(self): ...

class LegalFiling(Document):
    def caption(self): ...

def us_districts(bankruptcy: bool = ...): ...
