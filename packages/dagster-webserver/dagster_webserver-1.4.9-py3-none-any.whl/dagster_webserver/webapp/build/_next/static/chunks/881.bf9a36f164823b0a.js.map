{"version":3,"file":"static/chunks/881.bf9a36f164823b0a.js","mappings":"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","sources":["webpack://_N_E/../ui-components/src/components/Alert.tsx","webpack://_N_E/../ui-components/src/components/NonIdealState.tsx","webpack://_N_E/../ui-components/src/components/Page.tsx","webpack://_N_E/../ui-components/src/components/PageHeader.tsx","webpack://_N_E/../ui-core/src/ui/Loading.tsx","webpack://_N_E/../ui-core/src/workspace/GuessJobLocationRoot.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  icon?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          {props.icon || <Icon name={icon as IconName} color={iconColor} />}\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon?: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : icon ? (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      ) : null}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n          shrink: 1,\n          grow: 1,\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp4-breadcrumbs {\n    height: auto;\n  }\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {ERROR_CODES_TO_SURFACE, errorCodeToMessage} from '../app/HTTPErrorCodes';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n\n    const {networkError} = error;\n    if (!networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n\n    if ('statusCode' in networkError && ERROR_CODES_TO_SURFACE.has(networkError.statusCode)) {\n      const statusCode = networkError.statusCode;\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"Network error\"\n            description={errorCodeToMessage(statusCode)}\n          />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","import {\n  Alert,\n  Box,\n  NonIdealState,\n  Page,\n  PageHeader,\n  Table,\n  Heading,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {Link, Redirect, useLocation, useParams, useRouteMatch} from 'react-router-dom';\n\nimport {useTrackPageView} from '../app/analytics';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {LoadingSpinner} from '../ui/Loading';\n\nimport {isThisThingAJob, optionToRepoAddress, useRepositoryOptions} from './WorkspaceContext';\nimport {buildRepoPathForHuman} from './buildRepoAddress';\nimport {findRepoContainingPipeline} from './findRepoContainingPipeline';\nimport {workspacePath, workspacePathFromAddress} from './workspacePath';\n\nexport const GuessJobLocationRoot = () => {\n  useTrackPageView();\n\n  const params = useParams<{jobPath: string}>();\n  const {jobPath} = params;\n\n  const entireMatch = useRouteMatch('/guess/(/?.*)');\n  const location = useLocation();\n\n  const toAppend = (entireMatch!.params as any)[0];\n  const {search} = location;\n\n  const {pipelineName} = explorerPathFromString(jobPath);\n  const {loading, options} = useRepositoryOptions();\n\n  if (loading) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n\n  const reposWithMatch = findRepoContainingPipeline(options, pipelineName);\n  if (reposWithMatch.length === 0) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"no-results\"\n          title=\"No matching jobs\"\n          description={\n            <div>\n              <div>\n                <strong>{pipelineName}</strong>\n              </div>\n              was not found in any of your definitions.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  if (reposWithMatch.length === 1) {\n    const match = reposWithMatch[0]!;\n    const repoAddress = optionToRepoAddress(match);\n    const isJob = isThisThingAJob(match, pipelineName);\n    const to = workspacePathFromAddress(\n      repoAddress,\n      `/${isJob ? 'jobs' : 'pipelines'}/${toAppend}${search}`,\n    );\n    return <Redirect to={to} />;\n  }\n\n  const anyPipelines = reposWithMatch.some((repo) => !isThisThingAJob(repo, pipelineName));\n\n  return (\n    <Page>\n      <PageHeader\n        title={<Heading>{pipelineName}</Heading>}\n        icon=\"job\"\n        description={\n          anyPipelines\n            ? 'Job / pipeline in multiple code locations'\n            : 'Job in multiple code locations'\n        }\n      />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Alert\n          intent=\"info\"\n          title={\n            <div>\n              {anyPipelines ? (\n                <>\n                  Jobs or pipelines named <strong>{pipelineName}</strong> were found in multiple\n                  code locations.\n                </>\n              ) : (\n                <>\n                  Jobs named <strong>{pipelineName}</strong> were found in multiple code locations.\n                </>\n              )}\n            </div>\n          }\n        />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th>Code location</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {reposWithMatch.map((repository) => {\n            const {\n              repository: {name},\n              repositoryLocation: {name: location},\n            } = repository;\n            const repoString = buildRepoPathForHuman(name, location);\n            return (\n              <tr key={repoString}>\n                <td style={{width: '40%'}}>{repoString}</td>\n                <td>\n                  <Link\n                    to={workspacePath(\n                      name,\n                      location,\n                      `/${\n                        isThisThingAJob(repository, pipelineName) ? 'jobs' : 'pipelines'\n                      }/${pipelineName}`,\n                    )}\n                  >\n                    {pipelineName}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Page>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default GuessJobLocationRoot;\n"],"names":["Alert","props","intent","title","description","onClose","React","backgroundColor","Colors","Yellow50","borderColor","Yellow500","icon","iconColor","textColor","Yellow700","Red50","Red500","Red700","Green50","Green500","Green700","Blue50","Blue500","Blue700","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","jsx","AlertContainer","background","$borderColor","$textColor","padding","horizontal","vertical","jsxs","Box","flex","direction","justifyContent","Group","spacing","alignItems","Icon","name","color","AlertTitle","AlertDescription","ButtonWrapper","onClick","defaultProps","styled","button","withConfig","param","div","NonIdealState","action","shrinkable","singleContentElement","filter","Boolean","length","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","gap","Gray50","style","margin","borderRadius","width","maxWidth","Spinner","purpose","size","Gray400","shrink","grow","Subheading","Gray900","Gray500","Page","PageHeader","tags","right","tabs","PageHeaderContainer","top","left","border","side","KeylineGray","bottom","wrap","Loading","children","allowStaleData","renderError","queryResult","error","data","loading","blankLoading","setBlankLoading","isLoading","_props_allowStaleData","Object","keys","timer","setTimeout","clearTimeout","Fragment","networkError","ERROR_CODES_TO_SURFACE","has","statusCode","errorCodeToMessage","LoadingSpinner","isPage","undefined","height","GuessJobLocationRoot","useTrackPageView","jobPath","params","useParams","entireMatch","useRouteMatch","location","useLocation","toAppend","search","pipelineName","explorerPathFromString","useRepositoryOptions","options","reposWithMatch","findRepoContainingPipeline","strong","match","repoAddress","optionToRepoAddress","isJob","isThisThingAJob","to","workspacePathFromAddress","concat","Redirect","anyPipelines","some","repo","Heading","Table","thead","tr","th","tbody","map","repository","repositoryLocation","repoString","buildRepoPathForHuman","td","Link","workspacePath","__webpack_exports__"],"sourceRoot":""}