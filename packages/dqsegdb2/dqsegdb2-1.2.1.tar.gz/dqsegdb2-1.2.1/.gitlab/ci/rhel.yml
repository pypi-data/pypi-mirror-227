# ---------------------------
# RHEL packaging workflow
# ---------------------------

include:
  # https://computing.docs.ligo.org/gitlab-ci-templates/
  - project: computing/gitlab-ci-templates
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/
    file: rhel.yml
  # local test template
  - local: /.gitlab/ci/test.yml

# -- macros

.el7:
  image: igwn/base:el7-testing
  variables:
    EPEL: "true"

.el7-build:
  extends: .el7
  image: igwn/builder:el7-testing

.el8:
  image: igwn/base:el8-testing
  variables:
    EPEL: "true"

.el8-build:
  extends: .el8
  image: igwn/builder:el8-testing

.el9:
  image: igwn/base:el9-testing
  variables:
    EPEL: "true"

.el9-build:
  extends: .el9
  # igwn/builder isn't built for el9-testing yet
  #image: igwn/builder:el9-testing
  image: igwn/base:el9-testing

# -- source packages --------
#
# These jobs make src RPMs
#

.srpm:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:srpm
    - .rhel:srpm
  stage: source packages
  needs:
    - tarball
  variables:
    TARBALL: "dqsegdb2-*.tar.*"
  before_script:
    - !reference [".rhel:srpm", "before_script"]
    # hack the spec file to use the correct package version
    - tar --file ${TARBALL} --wildcards --strip-components 1 --get dqsegdb2*/*.spec dqsegdb2*/PKG-INFO
    - PKG_VERSION=$(grep ^Version PKG-INFO | cut -d\  -f2)
    - sed -i 's|define version\( *\)\(.*\)|define unmangled_version '${PKG_VERSION}'\n%define version '${PKG_VERSION/-/+}'|' *.spec
    - sed -i 's|pypi_source|pypi_source %{srcname} %{unmangled_version}|' *.spec
  script:
    - rpmbuild -bs
          --define "_srcrpmdir ${CI_PROJECT_DIR}"
          --define "_sourcedir ${CI_PROJECT_DIR}"
          *.spec

srpm:el7:
  extends:
    - .srpm
    - .el7-build

srpm:el8:
  extends:
    - .srpm
    - .el8-build

srpm:el9:
  extends:
    - .srpm
    - .el9-build

# -- binary packages --------
#
# These jobs generate binary RPMs
# from the src RPMs
#

.rpm:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:rpm
    - .rhel:rpm
  stage: binary packages
  variables:
    SRPM: "python-dqsegdb2-*.src.rpm"

rpm:el7:
  extends:
    - .rpm
    - .el7-build
  needs:
    - srpm:el7

rpm:el8:
  extends:
    - .rpm
    - .el8-build
  needs:
    - srpm:el8

rpm:el9:
  extends:
    - .rpm
    - .el9-build
  needs:
    - srpm:el9

# -- test -------------------

.test:el:
  extends:
    # see /.gitlab/ci/test.yml
    - .test
  before_script:
    # set up yum caching
    - !reference [".rhel:base", before_script]
    # configure EPEL
    - yum -y -q install epel-release && yum -y -q install epel-rpm-macros
    # install testing dependencies
    - PY3=$(rpm --eval '%{?python3_pkgversion:%{python3_pkgversion}}%{!?python3_pkgversion:3}')
    - yum -y -q install
          findutils
          python${PY3}-coverage
          python${PY3}-pytest
          python${PY3}-pytest-cov
          python${PY3}-requests-mock
    # install our package(s)
    - yum -y -q install *.rpm
    # upgrade coverage.py to >=5 so that .coverage files use new format
    - if [[ "${CI_JOB_NAME}" == *"el7" ]] || [[ "${CI_JOB_NAME}" == *"el8" ]]; then
      yum -y -q install python${PY3}-pip &&
      python3 -m pip install --upgrade-strategy=only-if-needed
          "coverage>=5"
      ; fi
  artifacts:
    reports:
      junit: null

test:el7:
  extends:
    - .test:el
    - .el7
  needs:
    - rpm:el7
  before_script:
    - !reference [".rhel:base", before_script]
    - yum -y -q install
          python3
          python36-pip
          python36-coverage
    - yum -y -q install *dqsegdb2*.rpm
    - python3 -m pip install "coverage>=5" --upgrade-strategy=only-if-needed
  script:
    # the test suite requires python3-requests-mock, which isn't
    # available on RHEL7, so we can't test much here
    - |
      cat > test.py << EOF
      from dqsegdb2.query import query_segments
      EOF
    - python3 -m coverage run
          --source=dqsegdb2
          --omit="*/_version.py"
          test.py

test:el8:
  extends:
    - .test:el
    - .el8
  needs:
    - rpm:el8

test:el9:
  extends:
    - .test:el
    - .el9
  needs:
    - rpm:el9

# -- lint -------------------
#
# These jobs check the code
# for quality issues
#

.rpmlint:
  extends:
    # https://computing.docs.ligo.org/gitlab-ci-templates/rhel/#.rhel:lint
    - .rhel:lint
  stage: code quality
  variables:
    GIT_STRATEGY: fetch
    RPMLINT_OPTIONS: '--info --file .rpmlintrc'
    RPMS: "./*.rpm \"*dqsegdb2*\""
  before_script:
    - !reference [".rhel:lint", before_script]
    # install the RPMS first
    - "${DNF} -y -q install *.rpm"

rpmlint:el7:
  extends:
    - .rpmlint
    - .el7
  needs:
    - rpm:el7

rpmlint:el8:
  extends:
    - .rpmlint
    - .el8
  needs:
    - rpm:el8

rpmlint:el9:
  extends:
    - .rpmlint
    - .el9
  needs:
    - rpm:el9
