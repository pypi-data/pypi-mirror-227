Metadata-Version: 2.1
Name: textbase-cli
Version: 0.1.1
Summary: A python library to help you create chatbots easily with some more configurations
Author: kaus-cofactory
Author-email: kaustubhshukla@cofactory.ai
Requires-Python: >=3.8.1,<4.0.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: fastapi
Requires-Dist: openai (>=0.27.8,<0.28.0)
Requires-Dist: pydantic (>=2.1.1,<3.0.0)
Requires-Dist: python-dotenv (>=1.0.0,<2.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: tabulate (>=0.9.0,<0.10.0)
Requires-Dist: twilio (>=8.5.0,<9.0.0)
Requires-Dist: uvicorn
Description-Content-Type: text/markdown

# Textbase Command Line Interface (CLI) Documentation
The Textbase CLI is a powerful tool that enables you to interact with the Textbase service using command-line arguments. This documentation provides a comprehensive guide on how to use the CLI to perform various operations, such as deploying bots, checking bot health, listing bots, and deleting bots.

## Installation
To install the Textbase CLI, you need to have Python and pip installed on your system. 

Install the required package using pip: 
```bash
pip install textbase-cli
```

## Usage

The Textbase CLI provides the following commands for interacting with the Textbase service:

### Local test command
The test function is a command-line interface (CLI) command that is used to run a Google Cloud Function locally for testing purposes. It uses the click library to define the command and its options.

Relative path to the `main.py` is supposed to be passed in the `--path` flag
#### Example:
```bash
textbase-cli test --path path/to/zip/folder
```

```bash
POST
body:
{
  "data": {
    "messages": [
      {
        "role": "user",
        "content": [{
          "data_type": "STRING",
          "value": "yoooo"
        }]
      },
      {
        "role": "user",
        "content": [{
          "data_type": "STRING",
          "value": "What is the best anime"
        }]
      },
      {
        "role": "user",
        "content": [{
          "data_type": "AUDIO",
          "value": "Who is Bill Gates?"
        }]
      }
    ],
    "state": {}
  }
}

response:
{
  "response": {
    "data": {
      "messages": [
        {
          "type": "string",
          "value": "Hello! How can I assist you today?"
        },
        {
          "type": "audio",
          "value": ""
        }
      ],
      "state": {
        "counter": 0
      }
    },
    "errors": [
      {
        "message": ""
      }
    ]
  },
  "status_code": 200
}
```
### Deploy Command

The deploy command allows you to deploy a bot using a zip folder. You need to provide the path to the zip folder, the bot name, and your Textbase API key.

```bash
textbase-cli deploy --path /path/to/zip-folder --bot_name YourBotName --api_key YourAPIKey
```

### Health Command

The health command allows you to check the health status of a bot, whether it is still deploying, failed or successfully deployed. You need to provide the bot ID and your Textbase API key.

```bash
textbase-cli health --bot_id YourBotId --api_key YourAPIKey
```

### List Command
The list command retrieves the list of bots associated with your Textbase account. You need to provide your Textbase API key.

```bash
textbase-cli list --api_key YourAPIKey
```

### Delete Command
The delete command allows you to delete a bot. You need to provide the bot ID and your Textbase API key.

```bash
textbase-cli delete --bot_id YourBotId --api_key YourAPIKey
```

## Contributing

Feel free to contribute to the Textbase CLI by opening issues or submitting pull requests. We welcome your feedback and contributions!
