name: kubernetes
aliases: |
    alias k='kubectl'
    alias kgp='kubectl get pods'
    alias kgs='kubectl get svc'
    alias kgn='kubectl get nodes'
    alias kgc='kubectl get componentstatuses'
    alias kd='kubectl describe'
    alias krm='kubectl delete'
    alias kex='kubectl exec -it'
    alias klo='kubectl logs'
    alias kaf='kubectl apply -f'
    alias kdf='kubectl delete -f'
    alias kctx='kubectx'
    alias kns='kubens'
automations:
  - name: backup-configmaps
    content:
      description: "Backup all ConfigMaps in a namespace"
      steps:
        - content: |
            #!/bin/bash
            NAMESPACE=$1
            BACKUP_DIR=$2
            mkdir -p $BACKUP_DIR
            for cm in $(kubectl get configmap -n $NAMESPACE -o name); do
              kubectl get $cm -n $NAMESPACE -o yaml > $BACKUP_DIR/$(basename $cm).yaml
            done
          description: "This will backup all ConfigMaps in a given namespace to a directory"
          runner: shell
          title: "Backup ConfigMaps"
  - name: rolling-restart
    content:
      description: "Perform a rolling restart of a Deployment"
      steps:
        - content: |
            #!/bin/bash
            DEPLOYMENT_NAME=$1
            NAMESPACE=$2
            kubectl rollout restart deployment $DEPLOYMENT_NAME -n $NAMESPACE
          description: "This will perform a rolling restart of a Deployment in a given namespace"
          runner: shell
          title: "Rolling Restart"
  - name: batch-pod-deletion
    content:
      description: "Batch delete Pods based on a label"
      steps:
        - content: |
            #!/bin/bash
            LABEL_SELECTOR=$1
            NAMESPACE=$2
            kubectl get pods -n $NAMESPACE --selector=$LABEL_SELECTOR -o name | xargs -I {} kubectl delete {} -n $NAMESPACE
          description: "This will delete all Pods in a given namespace that match a label selector"
          runner: shell
          title: "Batch Pod Deletion"