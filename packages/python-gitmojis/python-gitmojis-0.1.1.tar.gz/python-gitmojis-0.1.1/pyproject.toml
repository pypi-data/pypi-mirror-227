[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "python-gitmojis"
version = "0.1.1"
description = "üêç A small package to apply and manage Gitmojis in your projects üòú"
readme = "README.md"
requires-python = ">= 3.7"
authors = [
  { name = "Kamil Paduszy≈Ñski", email = "paduszyk@gmail.com" },
]
maintainers = [
  { name = "Kamil Paduszy≈Ñski", email = "paduszyk@gmail.com" },
]
keywords = [
  "python",
  "gitmojis",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Version Control",
]
dynamic = [
  "dependencies",
]

[project.urls]
"Homepage" = "https://github.com/paduszyk/python-gitmojis"
"Documentation" = "https://github.com/paduszyk/python-gitmojis#readme"
"Repository" = "https://github.com/paduszyk/python-gitmojis"
"Issue Tracker" = "https://github.com/paduszyk/python-gitmojis/issues"

[project.optional-dependencies]
dev = [
  "nox",
  "pre-commit",
]
lint = [
  "black",
  "mypy",
  "ruff",
  "types-requests",
]
test = [
  "pytest",
  "pytest-mock",
]
coverage = [
  "coverage",
]

[tool.setuptools.packages]
find = { include = ["gitmojis*"], where = ["src"] }

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }

[tool.black]
target-version = ["py311"]
line-length = 88

[tool.mypy]
exclude = "(build)"
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
  "F",    # pyflakes
  "E",    # pycodestyle (errors)
  "W",    # pycodestyle (warnings)
  "D",    # pydocstyle
  "N",    # pep8-naming
  "I",    # isort
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "T20",  # flake8-print
  "PT",   # flake8-pytest-style
  "Q",    # flake8-quotes
  "PTH",  # flake8-use-pathlib
]
ignore = [
  "D100",
  "D104",
  "D105",
  "D106",
  "D107",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*.py" = ["D1"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "tests",
  "local-folder",
  ]
known-first-party = ["gitmojis"]

[tool.ruff.isort.sections]
"tests" = ["tests"]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--doctest-modules",
]
pythonpath = [".", "src"]
testpaths = ["src/", "tests/"]

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_also = [
  "raise NotImplementedError",
]
partial_branches = [
  'if __name__ == "__main__":',
]
skip_covered = true
skip_empty = true
show_missing = true
