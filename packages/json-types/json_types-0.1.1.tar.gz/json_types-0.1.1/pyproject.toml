[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "json_types"
readme = "README.md"
requires-python = ">= 3.7"
license = { file = "LICENSE" }
authors = [
  { name = "Cal Jacobson", email = "cj81499@users.noreply.github.com" },
]
keywords = [
  "json",
]
# See https://pypi.org/pypi?%3Aaction=list_classifiers
# or https://github.com/pypa/trove-classifiers
classifiers = [
  "Development Status :: 3 - Alpha",
  # "Development Status :: 4 - Beta",
  # "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Typing :: Typed",
]
dependencies = []
dynamic = ["version", "description"]

[project.optional-dependencies]
dev = [
  "black >= 23.3", # https://black.readthedocs.io/en/stable/the_black_code_style/index.html#stability-policy
  "coverage[toml] >= 7.2.3",
  "mypy >= 1.2", # https://github.com/python/mypy/wiki/Release-Process#versioning-scheme
  "pytest >= 7.3",
  "ruff >= 0.0.262",
]
build = [
  "build >= 0.10.0",
]

[project.urls]
Documentation = "https://github.com/cj81499/json_types#readme"
Issues = "https://github.com/cj81499/json_types/issues"
Source = "https://github.com/cj81499/json_types"

[tool.black]
target-version = ["py37"]
line-length = 120

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "FBT003", # allow boolean positional values in function calls
]
unfixable = []

[tool.ruff.isort]
known-first-party = ["json_types"]

[tool.ruff.per-file-ignores]
"tests/**/*" = [
  "S101", # tests can use assertions
]

[tool.coverage.run]
branch = true
parallel = true
omit = []

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true
