name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build packaging twine
        pip install -r requirements.txt

    - name: Lint
      run: ruff --format=github .

    - name: Build package
      run: python -m build

    - name: Verify build
      run: |
        twine check dist/*
        python -m pip install .
        charfreq -h

    - name: Test
      run: pytest -v
