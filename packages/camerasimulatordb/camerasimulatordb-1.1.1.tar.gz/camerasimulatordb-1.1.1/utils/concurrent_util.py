"""This module has a process to call util mymean function one hundred
times with workers.
"""
import concurrent.futures
import util


def exec_mymean():
    """This method call util mymean function one hundred times
    with workers
    """
    executor = concurrent.futures.ThreadPoolExecutor(max_workers=5)
    for index in range(20):
        mean_future_1 = executor.submit(util.mymean)
        mean_future_2 = executor.submit(util.mymean)
        mean_future_3 = executor.submit(util.mymean)
        mean_future_4 = executor.submit(util.mymean)
        mean_future_5 = executor.submit(util.mymean)
        print(f"Iteration {index}: ")
        print(f"Mean 1: {mean_future_1.result()}")
        print(f"Mean 2: {mean_future_2.result()}")
        print(f"Mean 3: {mean_future_3.result()}")
        print(f"Mean 4: {mean_future_4.result()}")
        print(f"Mean 5: {mean_future_5.result()}")

if __name__ == "__main__":
    exec_mymean()

# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
# executor.submit(util.mymean)
