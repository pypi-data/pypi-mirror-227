Metadata-Version: 2.1
Name: richviewsdk
Version: 1.0.7
Summary: Package to interact with RichView API.
Home-page: https://therichview.com/
Author: Daniel Vecera
Author-email: daniel@therichview.com
License: UNKNOWN
Platform: UNKNOWN
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: recordclass
Requires-Dist: pandas (>=1.2.0)
Requires-Dist: requests
Requires-Dist: shortuuid
Requires-Dist: mergedeep


# RichView Python SDK

This Python SDK allows you to interact with the RichView API to manage your reports. You can authenticate, retrieve, duplicate, update, and delete reports. You can also manage the charts within the reports.

## Installation

To install the SDK, you can use pip:

```bash
pip install richviewsdk
```

## Usage

Here is a typical use case:

```python
# Import necessary libraries
import pandas as pd
import numpy as np
from richviewsdk import RichViewSession, ParagraphBlock

# Step 1: We authenticate using our PW and Password
with open('pws.txt') as f:
    email, password = f.read().split(',')
session = RichViewSession.authenticate_with_password(email, password)

# Step 2: Lets retrieve all the RichView reports in our account
reports = session.get_reports()

# Step 3: Lets choose the report named GummiesJune23 of the reports and retrieves it
old_report = next(report for report in reports if report.title == 'GummiesJune23')

# Step 4: Lets duplicate the report and renames it GummiesJuly23
report = old_report.duplicate()
report = report.set_title('GummiesJuly23')

# Step 5: Lets query the report for all the charts
charts = report.get_charts()

# Step 6: Lets  now get the chart we want to update by it's ID
chart_id = [chart.block_id for chart in charts if chart.title == 'Gummy Bear Price Index'][0]
chart = report.get_chart(chart_id)

# Step 7: Lets retrieve the data of the chart to see how it's structured
old_data = chart.get_data()

# Step 8: Lets generate a fresh of data for the chart
# This is a placeholder, replace with actual data generation code
new_data = old_data.copy()  # replace with actual data generation code

# Step 9: Lets update the data of the chart and changes the chart type
all_data = pd.concat([old_data, new_data])
all_data = all_data.rename(
    columns={'Gummy Bear Price Index | Line': 'Gummy Bear Price Index | Area'})
chart = chart.set_data(all_data)

# Step 10: Lets update the title of the chart
chart = chart.set_title('Gummy Bear Price Index July Update')

# Step 11: Lets add a paragraph of the text
paragraph = ParagraphBlock(report.report_id, 'I can add some autogenerated text', session)
report.add_block(paragraph)
```

## Documentation

For more detailed documentation, please refer to the official RichView API documentation.

## Support

If you encounter any issues or have any questions, please contact our support team at support@therichview.com



