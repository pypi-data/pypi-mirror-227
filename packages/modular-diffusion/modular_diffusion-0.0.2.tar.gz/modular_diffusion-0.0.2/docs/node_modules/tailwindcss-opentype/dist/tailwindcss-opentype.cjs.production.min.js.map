{"version":3,"file":"tailwindcss-opentype.cjs.production.min.js","sources":["../src/plugin.ts","../src/index.ts"],"sourcesContent":["import plugin from 'tailwindcss/plugin'\n\nconst JIT_FONT_FEATURE_DEFAULTS = {\n    '@defaults font-feature-settings': {},\n    'font-feature-settings': 'var(--ot-features)',\n}\n\nexport default plugin.withOptions(() => {\n    return function ({\n        addBase,\n        addUtilities,\n        // config,\n        // @ts-expect-error -- `matchUtilities` exists.\n        matchUtilities,\n        theme,\n        variants,\n    }) {\n        addUtilities(\n            {\n                '.kerning': { 'font-kerning': 'auto' },\n                '.kerning-normal': { 'font-kerning': 'normal' },\n                '.kerning-none': { 'font-kerning': 'none' },\n            },\n            variants('fontVariantLigatures', []),\n        )\n\n        addUtilities(\n            {\n                '.common-ligatures, .no-common-ligatures, .discretionary-ligatures, .no-discretionary-ligatures, .contextual, .no-contextual':\n                    {\n                        '--ot-liga': 'var(--tw-empty, /*!*/)',\n                        '--ot-dlig': 'var(--tw-empty, /*!*/)',\n                        '--ot-calt': 'var(--tw-empty, /*!*/)',\n                        'font-variant-ligatures':\n                            'var(--ot-liga) var(--ot-dlig) var(--ot-calt)',\n                    },\n                '.common-ligatures': { '--ot-liga': 'common-ligatures' },\n                '.no-common-ligatures': { '--ot-liga': 'no-common-ligatures' },\n                '.discretionary-ligatures': {\n                    '--ot-dlig': 'discretionary-ligatures',\n                },\n                '.no-discretionary-ligatures': {\n                    '--ot-dlig': 'no-discretionary-ligatures',\n                },\n                '.contextual': { '--ot-calt': 'contextual' },\n                '.no-contextual': { '--ot-calt': 'no-contextual' },\n            },\n            variants('fontVariantLigatures', []),\n        )\n\n        addUtilities(\n            {\n                '.small-caps': {\n                    'font-variant-caps': 'small-caps',\n                },\n                '.all-small-caps': {\n                    'font-variant-caps': 'all-small-caps',\n                },\n                '.titling-caps': {\n                    'font-variant-caps': 'titling-caps',\n                },\n            },\n            variants('fontVariantCaps', []),\n        )\n\n        addUtilities(\n            {\n                '.historical-forms': {\n                    'font-variant-alternates': 'historical-forms',\n                },\n            },\n            variants('fontVariantAlternates', []),\n        )\n\n        let stylisticSetsValues =\n            theme('stylisticSets', {\n                '01': 'ss01',\n                '02': 'ss02',\n                '03': 'ss03',\n                '04': 'ss04',\n            }) ?? {}\n        let stylisticSetsProperties = Object.values(stylisticSetsValues).map(\n            (tag: string) => `var(--ot-${tag})`,\n        )\n        let stylisticSetsDefaults: Record<string, string> = {}\n        for (let tag of Object.values(stylisticSetsValues) as string[]) {\n            stylisticSetsDefaults[`--ot-${tag}`] = `\"${tag}\" 0`\n        }\n\n        addBase({\n            '@defaults font-feature-settings': {\n                '--ot-sups': '\"sups\" 0',\n                '--ot-subs': '\"subs\" 0',\n                '--ot-sinf': '\"sinf\" 0',\n                '--ot-hlig': '\"hlig\" 0',\n                '--ot-salt': '\"salt\" 0',\n                ...stylisticSetsDefaults,\n                '--ot-features': [\n                    'var(--ot-sups)',\n                    'var(--ot-subs)',\n                    'var(--ot-sinf)',\n                    'var(--ot-hlig)',\n                    'var(--ot-salt)',\n                    ...stylisticSetsProperties,\n                ].join(', '),\n            },\n        })\n\n        addUtilities(\n            {\n                '.sups': {\n                    '--ot-sups': '\"sups\" 1',\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                },\n                '.subs': {\n                    '--ot-subs': '\"subs\" 1',\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                },\n                '.sinf': {\n                    '--ot-sinf': '\"sinf\" 1',\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                },\n                '.hlig': {\n                    '--ot-hlig': '\"hlig\" 1',\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                },\n                '.salt': {\n                    '--ot-salt': '\"salt\" 1',\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                },\n            },\n            variants('fontFeatureSettings', []),\n        )\n\n        matchUtilities(\n            {\n                ss: (value: string) => ({\n                    [`--ot-${value}`]: `\"${value}\" 1`,\n                    ...JIT_FONT_FEATURE_DEFAULTS,\n                }),\n            },\n            {\n                values: stylisticSetsValues,\n            },\n        )\n    }\n})\n","import plugin from './plugin'\n\nmodule.exports = plugin\n"],"names":["JIT_FONT_FEATURE_DEFAULTS","module","exports","plugin","withOptions","addBase","addUtilities","matchUtilities","theme","variants","stylisticSetsValues","stylisticSetsProperties","Object","values","map","tag","stylisticSetsDefaults","join","ss","value"],"mappings":"qTAEA,IAAMA,EAA4B,mCACK,2BACV,sBCF7BC,OAAOC,QDKQC,EAAOC,aAAY,kBACvB,kBACHC,IAAAA,QACAC,IAAAA,aAGAC,IAAAA,eACAC,IAAAA,MACAC,IAAAA,SAEAH,EACI,YACgB,gBAAkB,0BACX,gBAAkB,0BACpB,gBAAkB,SAEvCG,EAAS,uBAAwB,KAGrCH,EACI,+HAEQ,aACiB,qCACA,qCACA,kDAET,oEAES,aAAe,2CACZ,aAAe,kDACX,aACX,yDAEc,aACd,4CAEF,aAAe,+BACZ,aAAe,kBAErCG,EAAS,uBAAwB,KAGrCH,EACI,eACmB,qBACU,gCAEN,qBACM,kCAER,qBACQ,iBAG7BG,EAAS,kBAAmB,KAGhCH,EACI,qBACyB,2BACU,qBAGnCG,EAAS,wBAAyB,aAGlCC,WACAF,EAAM,gBAAiB,MACb,YACA,YACA,YACA,YACJ,GACNG,EAA0BC,OAAOC,OAAOH,GAAqBI,KAC7D,SAACC,qBAA4BA,SAE7BC,EAAgD,SACpCJ,OAAOC,OAAOH,kBAAkC,KAAvDK,OACLC,UAA8BD,OAAaA,QAG/CV,EAAQ,kDAEa,uBACA,uBACA,uBACA,uBACA,YACVW,mBACc,CACb,iBACA,iBACA,iBACA,iBACA,yBACGL,GACLM,KAAK,UAIfX,EACI,wBAEqB,YACVN,0BAGU,YACVA,0BAGU,YACVA,0BAGU,YACVA,0BAGU,YACVA,IAGXS,EAAS,sBAAuB,KAGpCF,EACI,CACIW,GAAI,SAACC,kCACQA,OAAcA,WACpBnB,KAGX,CACIa,OAAQH"}