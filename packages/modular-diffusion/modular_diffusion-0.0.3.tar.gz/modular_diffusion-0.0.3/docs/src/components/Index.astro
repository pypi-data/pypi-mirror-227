---
import type { MarkdownHeading } from "@astrojs/markdown-remark";

interface Props {
  headings: MarkdownHeading[];
}

const headings = Astro.props.headings.filter((heading) => heading.depth < 3);
headings[0].text = "Overview";
---

<div
  class="hidden xl:block sticky top-8 w-64 pr-16 pt-16 h-full text-sm min-w-fit"
>
  <h1 class="font-medium mb-1">On this page</h1>
  <ul class="index">
    {
      headings.map((heading) => (
        <li class="text-gray-600 hover:text-gray-800 hover:font-medium transition-colors w-full">
          <a class="block py-1" href={`#${heading.slug}`}>
            {heading.text}
          </a>
        </li>
      ))
    }
  </ul>
</div>

<script>
  const items = document.querySelectorAll(".index li");
  const article = document.querySelector("article");
  const headings = document.querySelectorAll("article :is(h1, h2)");

  document.addEventListener("scroll", () => {
    let index = 0;
    for (; index < headings.length; ++index) {
      if (headings[index].getBoundingClientRect().top > 88) {
        break;
      }
    }
    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {
      index = headings.length;
    }
    items.forEach((item) => {
      item.classList.remove("text-gray-900");
      item.classList.remove("font-medium");
      item.classList.add("text-gray-600");
    });
    if (index > 0) {
      items[index - 1].classList.remove("text-gray-600");
      items[index - 1].classList.add("text-gray-900");
      items[index - 1].classList.add("font-medium");
    }
  });
  document.dispatchEvent(new Event("scroll"));
</script>
