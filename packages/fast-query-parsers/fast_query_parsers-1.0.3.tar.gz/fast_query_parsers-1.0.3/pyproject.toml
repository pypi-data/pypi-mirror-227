[tool.poetry]
name = "fast-query-parsers"
version = "1.0.3"
description = "Ultra-fast query string and url-encoded form-data parsers"
authors = [
    "Na'aman Hirschfeld <nhirschfeld@gmail.com>",
    "Cody Fincher <cody.fincher@gmail.com>",
    "Janek Nouvertné <provinzkraut@posteo.de>",
    "Jacob Coffee <jacob@z7x.org>",
]
maintainers = [
    "Na'aman Hirschfeld <nhirschfeld@gmail.com>",
    "Cody Fincher <cody.fincher@gmail.com>",
    "Janek Nouvertné <provinzkraut@posteo.de>",
    "Jacob Coffee <jacob@z7x.org>",
]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[project]
name = "fast-query-parsers"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Programming Language :: Rust",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]

homepage = "https://github.com/starlite-api/fast-query-parsers"
documentation = "https://github.com/starlite-api/fast-query-parsers/README.md"
repository = "https://github.com/starlite-api/fast-query-parsers"
keywords = [
    "query",
    "query string",
    "qs",
    "query parameters",
    "rust",
    "asgi",
    "starlite",
    "litestar",
    "parser",
]

[tool.poetry.dependencies]
python = ">=3.8"

[tool.poetry.group.dev.dependencies]
maturin = "*"
pytest = "*"
pyperf = "*"

[build-system]
requires = ["maturin>=0.14,<0.15"]
build-backend = "maturin"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.maturin]
sdist-include = ["Cargo.lock"]
strip = true


[tool.ruff]
select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    "D", # pydocstyle
    "DJ", # flake8-django
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "ERA", # eradicate
    "EXE", # flake8-executable
    "F", # pyflakes
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PLC", # pylint - convention
    "PLE", # pylint - error
    "PLW", # pylint - warning
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RUF", # Ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
    "W", # pycodestyle - warning
    "YTT", # flake8-2020
]

ignore = [
    "A003", # flake8-builtins - class attribute {name} is shadowing a python builtin
    "B010", # flake8-bugbear - do not call setattr with a constant attribute value
    "D100", # pydocstyle - missing docstring in public module
    "D101", # pydocstyle - missing docstring in public class
    "D102", # pydocstyle - missing docstring in public method
    "D103", # pydocstyle - missing docstring in public function
    "D104", # pydocstyle - missing docstring in public package
    "D105", # pydocstyle - missing docstring in magic method
    "D106", # pydocstyle - missing docstring in public nested class
    "D107", # pydocstyle - missing docstring in __init__
    "D202", # pydocstyle - no blank lines allowed after function docstring
    "D205", # pydocstyle - 1 blank line required between summary line and description
    "D415", # pydocstyle - first line should end with a period, question mark, or exclamation point
    "E501", # pycodestyle line too long, handled by black
    "N818", # pep8-naming - exception name should be named with an Error suffix
    "S311", # flake8-bandit - Standard pseudo-random generators are not suitable for security/cryptographic purposes
    "S101", # asserts
    "D213", # multiline summary
    "D417"
]

line-length = 120
target-version = "py38"
