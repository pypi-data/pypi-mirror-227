Metadata-Version: 2.1
Name: candy-wrapper
Version: 1.0.1
Summary: A "sticky" wrapper for any object, that allow other objects to be add as propeties, which can be access through the .key notation or [key] notation. To unrap the object just add () notation to the end of the function.
License: Apache 2.0
Author: daniel davee
Author-email: daniel.v.davee@gmail.com
Requires-Python: >=3.8,<4.0
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: pysimplelog (>=4.0.0,<5.0.0)
Requires-Dist: yes-or-no (>=1.0.0,<2.0.0)
Description-Content-Type: text/markdown

# Candy Wrapper
Candy Wrapper is a "sticky" wrapper for any object, which adds syntax surgar.

This wrapper wraps any object, and give the ability
to add attributes to the object like a dictionary,
much in the same way that pandas dataframs work.

## Installation

You can install candy_wrapper with pip:

```
pip install candy_wrapper
```

Or with poetry:

```
poetry add candy_wrapper
```

## Usage

```python
from candy.candy_wrapper import Wrapper
foo = SomeClass()

# Wrap an object
candy = Wrapper(foo)

# Add an attribute to the object
foo['bar'] = 42

# Access the attribute
print(foo.bar)  # prints 42

# You can also use setattr
setattr(foo,'hey',420)

# And getattr
print(foo['hey'])  # prints 420
```                            

