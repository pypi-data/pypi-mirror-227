# coding: utf-8

"""
    Mozart platform API

    API for interacting with the Mozart platform.  # noqa: E501

    The version of the OpenAPI document: 0.2.0
    Contact: support@bang-olufsen.dk
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import mozart_api
from mozart_api.api.mozart_api import MozartApi  # noqa: E501
from mozart_api.rest import ApiException


class TestMozartApi(unittest.TestCase):
    """MozartApi unit test stubs"""

    def setUp(self):
        self.api = mozart_api.api.mozart_api.MozartApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_activate_listening_mode(self):
        """Test case for activate_listening_mode

        Activate a listening mode  # noqa: E501
        """
        pass

    def test_activate_preset(self):
        """Test case for activate_preset

        Trigger a preset  # noqa: E501
        """
        pass

    def test_add_to_queue(self):
        """Test case for add_to_queue

        Add an element to the queue  # noqa: E501
        """
        pass

    def test_get_active_listening_mode(self):
        """Test case for get_active_listening_mode

        Get the active listening mode  # noqa: E501
        """
        pass

    def test_get_all_scenes(self):
        """Test case for get_all_scenes

        Get a list of configured scenes  # noqa: E501
        """
        pass

    def test_get_available_sources(self):
        """Test case for get_available_sources

        Get all the available sources  # noqa: E501
        """
        pass

    def test_get_battery_state(self):
        """Test case for get_battery_state

        Get battery state of the product  # noqa: E501
        """
        pass

    def test_get_beolink_available_listeners(self):
        """Test case for get_beolink_available_listeners

        Get available listeners  # noqa: E501
        """
        pass

    def test_get_beolink_join_result(self):
        """Test case for get_beolink_join_result

        Get Beolink join result, test-endpoint  # noqa: E501
        """
        pass

    def test_get_beolink_listeners(self):
        """Test case for get_beolink_listeners

        Get joined peers  # noqa: E501
        """
        pass

    def test_get_beolink_peers(self):
        """Test case for get_beolink_peers

        Get discovered peers  # noqa: E501
        """
        pass

    def test_get_beolink_self(self):
        """Test case for get_beolink_self

        Get information about this device  # noqa: E501
        """
        pass

    def test_get_bluetooth_devices_status(self):
        """Test case for get_bluetooth_devices_status

        Get the bluetooth devices status  # noqa: E501
        """
        pass

    def test_get_bluetooth_remotes(self):
        """Test case for get_bluetooth_remotes

        Get a list of paired bluetooth remotes  # noqa: E501
        """
        pass

    def test_get_content(self):
        """Test case for get_content

        Get a list of available content  # noqa: E501
        """
        pass

    def test_get_current_volume(self):
        """Test case for get_current_volume

        Get the current volume state  # noqa: E501
        """
        pass

    def test_get_listening_mode_set(self):
        """Test case for get_listening_mode_set

        Get available listening modes that match the current role (standalone or multichannel).   # noqa: E501
        """
        pass

    def test_get_playback_state(self):
        """Test case for get_playback_state

        Get the current playback state  # noqa: E501
        """
        pass

    def test_get_power_state(self):
        """Test case for get_power_state

        Get power state of the product  # noqa: E501
        """
        pass

    def test_get_presets(self):
        """Test case for get_presets

        Get the preset configuration  # noqa: E501
        """
        pass

    def test_get_product_state(self):
        """Test case for get_product_state

        Get the overall state from the product  # noqa: E501
        """
        pass

    def test_get_remote_home_control_uri(self):
        """Test case for get_remote_home_control_uri

        Get the HomeControl dashboard URI  # noqa: E501
        """
        pass

    def test_get_remote_menu(self):
        """Test case for get_remote_menu

        Get all remote menu items  # noqa: E501
        """
        pass

    def test_get_settings_queue(self):
        """Test case for get_settings_queue

        Get the current queue settings  # noqa: E501
        """
        pass

    def test_get_softwareupdate_status(self):
        """Test case for get_softwareupdate_status

        Get the current software update status  # noqa: E501
        """
        pass

    def test_get_sound_features(self):
        """Test case for get_sound_features

        Get available sound features that match the current role (standalone or multichannel).   # noqa: E501
        """
        pass

    def test_get_speakergroup_active(self):
        """Test case for get_speakergroup_active

        Get the active speaker group  # noqa: E501
        """
        pass

    def test_get_volume_settings(self):
        """Test case for get_volume_settings

        Get the current volume settings for default and maximum volume level  # noqa: E501
        """
        pass

    def test_join_beolink_peer(self):
        """Test case for join_beolink_peer

        Join multi-room experience  # noqa: E501
        """
        pass

    def test_join_latest_beolink_experience(self):
        """Test case for join_latest_beolink_experience

        Trigger touch to join  # noqa: E501
        """
        pass

    def test_post_beolink_allstandby(self):
        """Test case for post_beolink_allstandby

        Broadcast an all standby event to turn all Beolink devices off  # noqa: E501
        """
        pass

    def test_post_beolink_expand(self):
        """Test case for post_beolink_expand

        Expand the current active experience  # noqa: E501
        """
        pass

    def test_post_beolink_leave(self):
        """Test case for post_beolink_leave

        Leave the ongoing experience (disconnect this device from remote)  # noqa: E501
        """
        pass

    def test_post_beolink_unexpand(self):
        """Test case for post_beolink_unexpand

        Unexpand (disconnect) a device from the multiroom session  # noqa: E501
        """
        pass

    def test_post_clear_queue(self):
        """Test case for post_clear_queue

        Clear the queue  # noqa: E501
        """
        pass

    def test_post_overlay_play(self):
        """Test case for post_overlay_play

        Play overlay  # noqa: E501
        """
        pass

    def test_post_playback_command(self):
        """Test case for post_playback_command

        Send a specific playback command to the product  # noqa: E501
        """
        pass

    def test_post_remote_key_trigger(self):
        """Test case for post_remote_key_trigger

        Remote input key press  # noqa: E501
        """
        pass

    def test_post_remote_trigger(self):
        """Test case for post_remote_trigger

        Trigger a remote menu item  # noqa: E501
        """
        pass

    def test_post_scene_match_trigger(self):
        """Test case for post_scene_match_trigger

        Trigger the first scene with same non null objects provided in the SceneMatch object  # noqa: E501
        """
        pass

    def test_post_scene_trigger(self):
        """Test case for post_scene_trigger

        Trigger a specific scene  # noqa: E501
        """
        pass

    def test_post_standby(self):
        """Test case for post_standby

        Put the device in standby  # noqa: E501
        """
        pass

    def test_post_uri_source(self):
        """Test case for post_uri_source

        Set the URI from which sound is streamed  # noqa: E501
        """
        pass

    def test_run_provided_scene(self):
        """Test case for run_provided_scene

        Run provided scene  # noqa: E501
        """
        pass

    def test_seek_to_position(self):
        """Test case for seek_to_position

        Seek to position in stream  # noqa: E501
        """
        pass

    def test_set_active_source(self):
        """Test case for set_active_source

        Set the active source  # noqa: E501
        """
        pass

    def test_set_current_volume_level(self):
        """Test case for set_current_volume_level

        Set the current volume level  # noqa: E501
        """
        pass

    def test_set_product_friendly_name(self):
        """Test case for set_product_friendly_name

        Set the friendly name  # noqa: E501
        """
        pass

    def test_set_remote_home_control_uri(self):
        """Test case for set_remote_home_control_uri

        Set the HomeControl dashboard URI  # noqa: E501
        """
        pass

    def test_set_settings_queue(self):
        """Test case for set_settings_queue

        Set queue settings  # noqa: E501
        """
        pass

    def test_set_sound_settings_adjustments_bass(self):
        """Test case for set_sound_settings_adjustments_bass

        Update the sound settings adjustments for bass  # noqa: E501
        """
        pass

    def test_set_sound_settings_adjustments_directivity(self):
        """Test case for set_sound_settings_adjustments_directivity

        Update the sound settings adjustments for directivity  # noqa: E501
        """
        pass

    def test_set_sound_settings_adjustments_loudness(self):
        """Test case for set_sound_settings_adjustments_loudness

        Update the sound settings adjustments for loudness  # noqa: E501
        """
        pass

    def test_set_sound_settings_adjustments_treble(self):
        """Test case for set_sound_settings_adjustments_treble

        Update the sound settings adjustments for treble  # noqa: E501
        """
        pass

    def test_set_volume_mute(self):
        """Test case for set_volume_mute

        Set the volume mute state  # noqa: E501
        """
        pass

    def test_set_volume_settings(self):
        """Test case for set_volume_settings

        Set the current volume settings for default and maximum volume level  # noqa: E501
        """
        pass

    def test_start_deezer_flow(self):
        """Test case for start_deezer_flow

        Play users flow. If no provided user id it will play the flow connected to the active account  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
