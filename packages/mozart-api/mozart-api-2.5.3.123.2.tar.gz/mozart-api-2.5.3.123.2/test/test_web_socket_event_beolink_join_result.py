# coding: utf-8

"""
    Mozart platform API

    API for interacting with the Mozart platform.  # noqa: E501

    The version of the OpenAPI document: 0.2.0
    Contact: support@bang-olufsen.dk
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mozart_api
from mozart_api.models.web_socket_event_beolink_join_result import (
    WebSocketEventBeolinkJoinResult,
)  # noqa: E501
from mozart_api.rest import ApiException


class TestWebSocketEventBeolinkJoinResult(unittest.TestCase):
    """WebSocketEventBeolinkJoinResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WebSocketEventBeolinkJoinResult
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = mozart_api.models.web_socket_event_beolink_join_result.WebSocketEventBeolinkJoinResult()  # noqa: E501
        if include_optional:
            return WebSocketEventBeolinkJoinResult(
                event_data=mozart_api.models.beolink_join_result.BeolinkJoinResult(
                    error="ok",
                    jid="2714.1200304.26451293@products.bang-olufsen.com",
                    request_id="48985a4f-a4de-4b44-9757-c9a7407b8882",
                    status="idle",
                    type="join",
                ),
                event_type="0",
            )
        else:
            return WebSocketEventBeolinkJoinResult(
                event_data=mozart_api.models.beolink_join_result.BeolinkJoinResult(
                    error="ok",
                    jid="2714.1200304.26451293@products.bang-olufsen.com",
                    request_id="48985a4f-a4de-4b44-9757-c9a7407b8882",
                    status="idle",
                    type="join",
                ),
                event_type="0",
            )

    def testWebSocketEventBeolinkJoinResult(self):
        """Test WebSocketEventBeolinkJoinResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
