# coding: utf-8

"""
    Mozart platform API

    API for interacting with the Mozart platform.  # noqa: E501

    The version of the OpenAPI document: 0.2.0
    Contact: support@bang-olufsen.dk
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mozart_api
from mozart_api.models.software_update_status import SoftwareUpdateStatus  # noqa: E501
from mozart_api.rest import ApiException


class TestSoftwareUpdateStatus(unittest.TestCase):
    """SoftwareUpdateStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SoftwareUpdateStatus
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = mozart_api.models.software_update_status.SoftwareUpdateStatus()  # noqa: E501
        if include_optional:
            return SoftwareUpdateStatus(
                available_update="0",
                last_check=datetime.datetime.strptime(
                    "2013-10-20 19:20:30.00", "%Y-%m-%d %H:%M:%S.%f"
                ),
                last_update=datetime.datetime.strptime(
                    "2013-10-20 19:20:30.00", "%Y-%m-%d %H:%M:%S.%f"
                ),
                software_version="0",
                state=mozart_api.models.software_update_state.SoftwareUpdateState(
                    seconds_remaining=56,
                    value="idle",
                ),
                update_progress=56,
            )
        else:
            return SoftwareUpdateStatus(
                software_version="0",
                state=mozart_api.models.software_update_state.SoftwareUpdateState(
                    seconds_remaining=56,
                    value="idle",
                ),
            )

    def testSoftwareUpdateStatus(self):
        """Test SoftwareUpdateStatus"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
