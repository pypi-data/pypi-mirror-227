# coding: utf-8

"""
    Mozart platform API

    API for interacting with the Mozart platform.  # noqa: E501

    The version of the OpenAPI document: 0.2.0
    Contact: support@bang-olufsen.dk
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import mozart_api
from mozart_api.models.listening_mode_props import ListeningModeProps  # noqa: E501
from mozart_api.rest import ApiException


class TestListeningModeProps(unittest.TestCase):
    """ListeningModeProps unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListeningModeProps
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # model = mozart_api.models.listening_mode_props.ListeningModeProps()  # noqa: E501
        if include_optional:
            return ListeningModeProps(
                client_ctx="0",
                features=mozart_api.models.listening_mode_features.ListeningModeFeatures(
                    ambience=mozart_api.models.ambience.Ambience(
                        value=1.337,
                    ),
                    balance=mozart_api.models.balance.Balance(
                        value=1.337,
                    ),
                    bass_management=mozart_api.models.bass_management.BassManagement(
                        value="on",
                    ),
                    compression=mozart_api.models.compression.Compression(
                        value="off",
                    ),
                    directivity=mozart_api.models.directivity.Directivity(
                        value="front",
                    ),
                    fader=mozart_api.models.fader.Fader(
                        value=1.337,
                    ),
                    room_compensation=mozart_api.models.room_compensation.RoomCompensation(
                        value=["0"],
                    ),
                    spatial_envelopment=mozart_api.models.spatial_envelopment.SpatialEnvelopment(
                        value=1.337,
                    ),
                    spatial_height=mozart_api.models.spatial_height.SpatialHeight(
                        value=1.337,
                    ),
                    spatial_processing=mozart_api.models.spatial_processing.SpatialProcessing(
                        value="direct",
                    ),
                    spatial_surround=mozart_api.models.spatial_surround.SpatialSurround(
                        value=1.337,
                    ),
                    spatial_width=mozart_api.models.spatial_width.SpatialWidth(
                        value=1.337,
                    ),
                    speech_enhance=mozart_api.models.speech_enhance.SpeechEnhance(
                        value=1.337,
                    ),
                    tone_touch=mozart_api.models.tone_touch.ToneTouch(
                        x=mozart_api.models.tone_touch_type.ToneTouchType(
                            value=1.337,
                        ),
                        y=mozart_api.models.tone_touch_type.ToneTouchType(
                            value=1.337,
                        ),
                    ),
                ),
                id=0,
                name="0",
                origin="user",
                role="standalone",
                triggers=[null],
            )
        else:
            return ListeningModeProps()

    def testListeningModeProps(self):
        """Test ListeningModeProps"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
